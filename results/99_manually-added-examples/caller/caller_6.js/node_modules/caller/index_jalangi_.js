J$.iids = {"8":[20,13,20,35],"9":[1,1,1,13],"10":[20,13,20,19],"16":[20,43,20,67],"17":[1,1,1,14],"18":[20,51,20,67],"24":[20,13,20,35],"25":[10,1,10,7],"26":[20,43,20,67],"32":[25,16,25,44],"33":[13,11,13,16],"34":[20,70,20,86],"40":[26,14,26,50],"41":[13,11,13,34],"42":[21,25,21,34],"48":[26,14,26,50],"49":[13,11,13,34],"50":[26,30,26,50],"57":[13,5,13,35],"65":[14,5,14,10],"73":[15,9,15,14],"81":[15,35,15,38],"89":[15,9,15,38],"97":[15,9,15,39],"105":[16,16,16,21],"113":[16,16,16,21],"121":[16,9,16,22],"129":[14,31,17,6],"137":[14,31,17,6],"145":[14,31,17,6],"153":[14,31,17,6],"161":[14,31,17,6],"169":[14,5,17,6],"177":[14,5,17,7],"185":[19,18,19,23],"193":[19,14,19,25],"201":[19,13,19,32],"209":[19,13,19,32],"217":[19,5,19,33],"225":[20,14,20,19],"233":[20,23,20,28],"241":[20,29,20,34],"249":[20,23,20,35],"257":[20,38,20,39],"265":[20,43,20,48],"273":[20,51,20,56],"281":[20,51,20,63],"289":[20,66,20,67],"297":[20,70,20,75],"305":[20,70,20,82],"313":[20,85,20,86],"321":[20,89,20,94],"329":[20,13,20,95],"337":[20,5,20,96],"345":[21,13,21,18],"353":[21,25,21,30],"361":[21,33,21,34],"369":[21,13,21,35],"371":[21,13,21,24],"377":[21,13,21,35],"385":[21,5,21,36],"393":[24,17,24,22],"401":[24,17,24,30],"403":[24,17,24,28],"409":[24,17,24,30],"417":[24,9,24,31],"425":[25,16,25,21],"433":[25,25,25,30],"441":[25,25,25,44],"443":[25,25,25,42],"449":[25,16,25,44],"457":[25,9,25,45],"465":[26,14,26,19],"473":[26,14,26,26],"481":[26,30,26,34],"489":[26,39,26,50],"497":[28,12,28,16],"505":[28,12,28,16],"513":[28,5,28,17],"521":[10,18,29,2],"529":[10,18,29,2],"537":[10,18,29,2],"545":[10,18,29,2],"553":[10,18,29,2],"561":[10,18,29,2],"569":[10,18,29,2],"577":[10,18,29,2],"585":[10,1,29,2],"593":[10,1,29,3],"601":[1,1,30,1],"609":[14,31,17,6],"617":[14,31,17,6],"625":[20,43,20,94],"633":[20,13,20,95],"641":[23,5,26,52],"649":[10,18,29,2],"657":[10,18,29,2],"665":[1,1,30,1],"673":[1,1,30,1],"nBranches":12,"originalCodeFileName":"/tmp/runtimeAnalysis/node_modules/caller/index.js","instrumentedCodeFileName":"/tmp/runtimeAnalysis/node_modules/caller/index_jalangi_.js","code":"'use strict';\n\n\n/**\n * Module wrapper of @substack's `caller.js`\n * @original: https://github.com/substack/node-resolve/blob/master/lib/caller.js\n * @blessings: https://twitter.com/eriktoth/statuses/413719312273125377\n * @see https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n */\nmodule.exports = function (depth) {\n    var pst, stack, file, frame;\n\n    pst = Error.prepareStackTrace;\n    Error.prepareStackTrace = function (_, stack) {\n        Error.prepareStackTrace = pst;\n        return stack;\n    };\n\n    stack = (new Error()).stack;\n    depth = !depth || isNaN(depth) ? 1 : (depth > stack.length - 2 ? stack.length - 2 : depth);\n    stack = stack.slice(depth + 1);\n\n    do {\n        frame = stack.shift();\n        file = frame && frame.getFileName();\n    } while (stack.length && file === 'module.js');\n\n    return file;\n};\n"};
jalangiLabel3:
    while (true) {
        try {
            J$.Se(601, '/tmp/runtimeAnalysis/node_modules/caller/index_jalangi_.js', '/tmp/runtimeAnalysis/node_modules/caller/index.js');
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            J$.X1(593, J$.P(585, J$.R(25, 'module', module, 2), 'exports', J$.T(577, function (depth) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(521, arguments.callee, this, arguments);
                            arguments = J$.N(529, 'arguments', arguments, 4);
                            depth = J$.N(537, 'depth', depth, 4);
                            J$.N(545, 'pst', pst, 0);
                            J$.N(553, 'stack', stack, 0);
                            J$.N(561, 'file', file, 0);
                            J$.N(569, 'frame', frame, 0);
                            var pst, stack, file, frame;
                            J$.X1(57, pst = J$.W(49, 'pst', J$.G(41, J$.R(33, 'Error', Error, 2), 'prepareStackTrace', 0), pst, 0));
                            J$.X1(177, J$.P(169, J$.R(65, 'Error', Error, 2), 'prepareStackTrace', J$.T(161, function (_, stack) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(129, arguments.callee, this, arguments);
                                            arguments = J$.N(137, 'arguments', arguments, 4);
                                            _ = J$.N(145, '_', _, 4);
                                            stack = J$.N(153, 'stack', stack, 4);
                                            J$.X1(97, J$.P(89, J$.R(73, 'Error', Error, 2), 'prepareStackTrace', J$.R(81, 'pst', pst, 0), 0));
                                            return J$.X1(121, J$.Rt(113, J$.R(105, 'stack', stack, 0)));
                                        } catch (J$e) {
                                            J$.Ex(609, J$e);
                                        } finally {
                                            if (J$.Fr(617))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 129), 0));
                            J$.X1(217, stack = J$.W(209, 'stack', J$.G(201, J$.F(193, J$.R(185, 'Error', Error, 2), 1)(), 'stack', 0), stack, 0));
                            J$.X1(337, depth = J$.W(329, 'depth', J$.X1(633, J$.C(24, J$.C(8, J$.U(10, '!', J$.R(225, 'depth', depth, 0))) ? J$._() : J$.F(249, J$.R(233, 'isNaN', isNaN, 2), 0)(J$.R(241, 'depth', depth, 0)))) ? J$.T(257, 1, 22, false) : J$.X1(625, J$.C(16, J$.B(26, '>', J$.R(265, 'depth', depth, 0), J$.B(18, '-', J$.G(281, J$.R(273, 'stack', stack, 0), 'length', 0), J$.T(289, 2, 22, false), 0), 0))) ? J$.B(34, '-', J$.G(305, J$.R(297, 'stack', stack, 0), 'length', 0), J$.T(313, 2, 22, false), 0) : J$.R(321, 'depth', depth, 0), depth, 0));
                            J$.X1(385, stack = J$.W(377, 'stack', J$.M(369, J$.R(345, 'stack', stack, 0), 'slice', 0)(J$.B(42, '+', J$.R(353, 'depth', depth, 0), J$.T(361, 1, 22, false), 0)), stack, 0));
                            do {
                                J$.X1(417, frame = J$.W(409, 'frame', J$.M(401, J$.R(393, 'stack', stack, 0), 'shift', 0)(), frame, 0));
                                J$.X1(457, file = J$.W(449, 'file', J$.C(32, J$.R(425, 'frame', frame, 0)) ? J$.M(441, J$.R(433, 'frame', frame, 0), 'getFileName', 0)() : J$._(), file, 0));
                            } while (J$.X1(641, J$.C(48, J$.C(40, J$.G(473, J$.R(465, 'stack', stack, 0), 'length', 0)) ? J$.B(50, '===', J$.R(481, 'file', file, 0), J$.T(489, 'module.js', 21, false), 0) : J$._())));
                            return J$.X1(513, J$.Rt(505, J$.R(497, 'file', file, 0)));
                        } catch (J$e) {
                            J$.Ex(649, J$e);
                        } finally {
                            if (J$.Fr(657))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 521), 0));
        } catch (J$e) {
            J$.Ex(665, J$e);
        } finally {
            if (J$.Sr(673)) {
                J$.L();
                continue jalangiLabel3;
            } else {
                J$.L();
                break jalangiLabel3;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
