J$.iids = {"8":[7,5,7,15],"9":[1,1,1,7],"10":[7,5,7,15],"16":[12,7,12,31],"17":[1,18,1,23],"18":[12,9,12,30],"24":[16,19,16,47],"25":[1,1,1,23],"26":[12,7,12,31],"32":[23,7,23,33],"33":[1,1,1,23],"34":[23,7,23,33],"41":[3,12,3,19],"42":[24,25,24,76],"49":[3,20,3,26],"50":[24,25,24,88],"57":[3,12,3,27],"65":[3,12,3,27],"73":[3,12,3,27],"81":[5,17,5,24],"89":[5,25,5,33],"97":[5,17,5,34],"105":[5,17,5,44],"113":[5,17,5,44],"121":[5,17,5,44],"129":[7,6,7,15],"137":[8,15,8,22],"145":[8,23,8,50],"153":[8,15,8,51],"161":[8,15,8,51],"169":[8,3,8,51],"177":[12,9,12,13],"185":[12,25,12,30],"193":[12,44,12,49],"201":[12,50,12,58],"209":[12,40,12,59],"217":[12,40,12,59],"225":[12,33,12,59],"233":[13,3,13,12],"241":[13,18,13,22],"249":[13,3,13,23],"251":[13,3,13,17],"257":[13,3,13,23],"265":[15,3,15,7],"273":[15,16,15,17],"281":[15,3,15,17],"289":[15,3,15,17],"297":[16,3,16,7],"305":[16,19,16,27],"313":[16,31,16,37],"321":[16,31,16,47],"329":[16,3,16,47],"337":[16,3,16,47],"345":[11,1,17,2],"353":[11,1,17,2],"361":[11,1,17,2],"369":[18,1,18,5],"377":[18,15,18,20],"385":[18,22,18,31],"393":[18,1,18,32],"395":[18,1,18,14],"401":[18,1,18,32],"409":[20,1,20,6],"417":[20,1,20,16],"425":[21,3,21,7],"433":[21,17,21,22],"441":[21,17,21,29],"449":[21,3,21,29],"451":[21,3,21,29],"457":[21,3,21,29],"465":[22,3,22,7],"473":[22,13,22,18],"481":[22,3,22,19],"483":[22,3,22,12],"489":[22,3,22,19],"497":[23,7,23,11],"505":[23,7,23,17],"513":[23,20,23,24],"521":[23,20,23,33],"529":[24,12,24,14],"537":[24,19,24,24],"545":[24,25,24,60],"553":[24,63,24,67],"561":[24,63,24,76],"569":[24,79,24,88],"577":[24,15,24,89],"585":[24,12,24,90],"593":[24,12,24,90],"601":[24,5,24,90],"609":[26,3,26,5],"617":[26,3,26,7],"625":[26,3,26,7],"633":[20,30,27,2],"641":[20,30,27,2],"649":[20,30,27,2],"657":[20,30,27,2],"665":[20,30,27,2],"673":[20,30,27,2],"681":[20,1,27,2],"689":[20,1,27,2],"697":[1,1,27,2],"705":[1,1,27,2],"713":[1,1,27,2],"721":[11,1,17,2],"729":[1,1,27,2],"737":[7,1,9,2],"745":[12,3,12,59],"753":[11,1,17,2],"761":[11,1,17,2],"769":[23,3,25,4],"777":[20,30,27,2],"785":[20,30,27,2],"793":[1,1,27,2],"801":[1,1,27,2],"nBranches":8,"originalCodeFileName":"/tmp/runtimeAnalysis/node_modules/stream-meter/index.js","instrumentedCodeFileName":"/tmp/runtimeAnalysis/node_modules/stream-meter/index_jalangi_.js","code":"module.exports = Meter\n\nvar util = require(\"util\")\n\nvar Transform = require(\"stream\").Transform\n\nif (!Transform) {\n  Transform = require(\"readable-stream/transform\")\n}\n\nfunction Meter(maxBytes) {\n  if (!(this instanceof Meter)) return new Meter(maxBytes)\n  Transform.call(this)\n\n  this.bytes = 0\n  this.maxBytes = maxBytes || Number.MAX_VALUE\n}\nutil.inherits(Meter, Transform)\n\nMeter.prototype._transform = function (chunk, encoding, cb) {\n  this.bytes += chunk.length\n  this.push(chunk)\n  if (this.bytes > this.maxBytes) {\n    return cb(new Error(\"Stream exceeded specified max of \" + this.maxBytes + \" bytes.\"))\n  }\n  cb()\n}"};
jalangiLabel4:
    while (true) {
        try {
            J$.Se(697, '/tmp/runtimeAnalysis/node_modules/stream-meter/index_jalangi_.js', '/tmp/runtimeAnalysis/node_modules/stream-meter/index.js');
            function Meter(maxBytes) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(345, arguments.callee, this, arguments);
                            arguments = J$.N(353, 'arguments', arguments, 4);
                            maxBytes = J$.N(361, 'maxBytes', maxBytes, 4);
                            if (J$.X1(745, J$.C(16, J$.U(26, '!', J$.B(18, 'instanceof', J$.R(177, 'this', this, 0), J$.R(185, 'Meter', Meter, 1), 0)))))
                                return J$.X1(225, J$.Rt(217, J$.F(209, J$.R(193, 'Meter', Meter, 1), 1)(J$.R(201, 'maxBytes', maxBytes, 0))));
                            J$.X1(257, J$.M(249, J$.R(233, 'Transform', Transform, 1), 'call', 0)(J$.R(241, 'this', this, 0)));
                            J$.X1(289, J$.P(281, J$.R(265, 'this', this, 0), 'bytes', J$.T(273, 0, 22, false), 0));
                            J$.X1(337, J$.P(329, J$.R(297, 'this', this, 0), 'maxBytes', J$.C(24, J$.R(305, 'maxBytes', maxBytes, 0)) ? J$._() : J$.G(321, J$.R(313, 'Number', Number, 2), 'MAX_VALUE', 0), 0));
                        } catch (J$e) {
                            J$.Ex(753, J$e);
                        } finally {
                            if (J$.Fr(761))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(705, 'util', util, 0);
            J$.N(713, 'Transform', Transform, 0);
            Meter = J$.N(729, 'Meter', J$.T(721, Meter, 12, false, 345), 0);
            J$.X1(33, J$.P(25, J$.R(9, 'module', module, 2), 'exports', J$.R(17, 'Meter', Meter, 1), 0));
            var util = J$.X1(73, J$.W(65, 'util', J$.F(57, J$.R(41, 'require', require, 2), 0)(J$.T(49, "util", 21, false)), util, 3));
            var Transform = J$.X1(121, J$.W(113, 'Transform', J$.G(105, J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, "stream", 21, false)), 'Transform', 0), Transform, 3));
            if (J$.X1(737, J$.C(8, J$.U(10, '!', J$.R(129, 'Transform', Transform, 1))))) {
                J$.X1(169, Transform = J$.W(161, 'Transform', J$.F(153, J$.R(137, 'require', require, 2), 0)(J$.T(145, "readable-stream/transform", 21, false)), Transform, 2));
            }
            J$.X1(401, J$.M(393, J$.R(369, 'util', util, 1), 'inherits', 0)(J$.R(377, 'Meter', Meter, 1), J$.R(385, 'Transform', Transform, 1)));
            J$.X1(689, J$.P(681, J$.G(417, J$.R(409, 'Meter', Meter, 1), 'prototype', 0), '_transform', J$.T(673, function (chunk, encoding, cb) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(633, arguments.callee, this, arguments);
                            arguments = J$.N(641, 'arguments', arguments, 4);
                            chunk = J$.N(649, 'chunk', chunk, 4);
                            encoding = J$.N(657, 'encoding', encoding, 4);
                            cb = J$.N(665, 'cb', cb, 4);
                            J$.X1(457, J$.A(449, J$.R(425, 'this', this, 0), 'bytes', '+', 0)(J$.G(441, J$.R(433, 'chunk', chunk, 0), 'length', 0)));
                            J$.X1(489, J$.M(481, J$.R(465, 'this', this, 0), 'push', 0)(J$.R(473, 'chunk', chunk, 0)));
                            if (J$.X1(769, J$.C(32, J$.B(34, '>', J$.G(505, J$.R(497, 'this', this, 0), 'bytes', 0), J$.G(521, J$.R(513, 'this', this, 0), 'maxBytes', 0), 0)))) {
                                return J$.X1(601, J$.Rt(593, J$.F(585, J$.R(529, 'cb', cb, 0), 0)(J$.F(577, J$.R(537, 'Error', Error, 2), 1)(J$.B(50, '+', J$.B(42, '+', J$.T(545, "Stream exceeded specified max of ", 21, false), J$.G(561, J$.R(553, 'this', this, 0), 'maxBytes', 0), 0), J$.T(569, " bytes.", 21, false), 0)))));
                            }
                            J$.X1(625, J$.F(617, J$.R(609, 'cb', cb, 0), 0)());
                        } catch (J$e) {
                            J$.Ex(777, J$e);
                        } finally {
                            if (J$.Fr(785))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 633), 0));
        } catch (J$e) {
            J$.Ex(793, J$e);
        } finally {
            if (J$.Sr(801)) {
                J$.L();
                continue jalangiLabel4;
            } else {
                J$.L();
                break jalangiLabel4;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
