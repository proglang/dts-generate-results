J$.iids = {"8":[6,14,6,25],"9":[3,3,3,15],"10":[8,22,8,39],"16":[13,8,13,18],"17":[3,3,3,16],"18":[17,12,17,34],"24":[21,13,21,23],"25":[6,14,6,20],"26":[17,12,17,38],"32":[24,6,24,48],"33":[6,24,6,25],"34":[21,12,21,44],"40":[26,13,26,60],"41":[6,14,6,25],"42":[24,6,24,19],"48":[26,13,26,60],"49":[6,5,6,26],"50":[24,6,24,34],"56":[24,6,24,48],"57":[8,22,8,28],"58":[26,13,26,26],"65":[8,29,8,34],"66":[26,13,26,42],"73":[8,22,8,35],"81":[8,38,8,39],"89":[8,22,8,39],"97":[8,22,8,39],"105":[9,18,9,23],"113":[9,18,9,34],"115":[9,18,9,32],"121":[9,18,9,34],"129":[9,18,9,34],"137":[10,16,10,17],"145":[10,16,10,17],"153":[10,16,10,17],"161":[13,8,13,18],"169":[14,16,14,22],"177":[14,29,14,30],"185":[14,16,14,31],"187":[14,16,14,28],"193":[14,16,14,31],"201":[14,7,14,32],"209":[17,12,17,18],"217":[17,21,17,27],"225":[17,21,17,34],"233":[17,37,17,38],"241":[17,12,17,38],"249":[17,5,17,39],"257":[18,18,18,23],"265":[18,24,18,28],"273":[18,14,18,29],"281":[18,35,18,38],"289":[18,14,18,39],"291":[18,14,18,34],"297":[18,47,18,53],"305":[18,14,18,54],"307":[18,14,18,46],"313":[18,14,18,54],"321":[18,5,18,55],"329":[21,13,21,23],"337":[21,26,21,29],"345":[21,32,21,34],"353":[21,38,21,44],"361":[21,12,21,44],"369":[21,5,21,45],"377":[5,3,22,4],"385":[5,3,22,4],"393":[5,3,22,4],"401":[5,3,22,4],"409":[5,3,22,4],"417":[5,3,22,4],"425":[5,3,22,4],"433":[24,13,24,19],"441":[24,24,24,34],"449":[24,38,24,44],"457":[24,38,24,48],"465":[25,5,25,11],"473":[25,32,25,39],"481":[25,32,25,39],"489":[25,25,25,40],"497":[25,12,25,42],"505":[25,12,25,42],"513":[25,12,25,42],"521":[25,5,25,43],"529":[25,5,25,44],"537":[26,20,26,26],"545":[26,31,26,42],"553":[26,46,26,52],"561":[26,46,26,60],"569":[27,5,27,11],"577":[27,22,27,29],"585":[27,5,27,29],"593":[27,5,27,30],"601":[29,5,29,12],"609":[29,23,29,30],"617":[29,5,29,30],"625":[29,5,29,31],"633":[1,2,32,2],"641":[1,2,32,2],"649":[1,2,32,2],"657":[5,3,22,4],"665":[1,2,32,2],"673":[1,2,32,2],"681":[32,4,32,8],"689":[1,1,32,9],"697":[1,1,32,10],"705":[1,1,33,1],"713":[13,5,15,6],"721":[21,13,21,34],"729":[5,3,22,4],"737":[5,3,22,4],"745":[25,12,25,42],"753":[25,12,25,42],"761":[26,10,30,4],"769":[24,3,30,4],"777":[1,2,32,2],"785":[1,2,32,2],"793":[1,1,33,1],"801":[1,1,33,1],"nBranches":14,"originalCodeFileName":"/tmp/runtimeAnalysis/node_modules/add-zero/index.js","instrumentedCodeFileName":"/tmp/runtimeAnalysis/node_modules/add-zero/index_jalangi_.js","code":"(function(exports) {\n\n  'use strict';\n\n  function addZero(value, digits) {\n    digits = digits || 2;\n\n    var isNegative = Number(value) < 0;\n    var buffer = value.toString();\n    var size = 0;\n\n    // Strip minus sign if number is negative\n    if(isNegative) {\n      buffer = buffer.slice(1);\n    }\n\n    size = digits - buffer.length + 1;\n    buffer = new Array(size).join('0').concat(buffer);\n\n    // Adds back minus sign if needed\n    return (isNegative ? '-' : '') + buffer;\n  }\n\n  if(typeof define === 'function' && define.amd) {\n    define(function() { return addZero; });\n  } else if(typeof module !== 'undefined' && module.exports) {\n    module.exports = addZero;\n  } else {\n    exports.addZero = addZero;\n  }\n\n})(this);\n"};
jalangiLabel4:
    while (true) {
        try {
            J$.Se(705, '/tmp/runtimeAnalysis/node_modules/add-zero/index_jalangi_.js', '/tmp/runtimeAnalysis/node_modules/add-zero/index.js');
            J$.X1(697, J$.F(689, J$.T(673, function (exports) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(633, arguments.callee, this, arguments);
                            function addZero(value, digits) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(377, arguments.callee, this, arguments);
                                            arguments = J$.N(385, 'arguments', arguments, 4);
                                            value = J$.N(393, 'value', value, 4);
                                            digits = J$.N(401, 'digits', digits, 4);
                                            J$.N(409, 'isNegative', isNegative, 0);
                                            J$.N(417, 'buffer', buffer, 0);
                                            J$.N(425, 'size', size, 0);
                                            J$.X1(49, digits = J$.W(41, 'digits', J$.C(8, J$.R(25, 'digits', digits, 0)) ? J$._() : J$.T(33, 2, 22, false), digits, 0));
                                            var isNegative = J$.X1(97, J$.W(89, 'isNegative', J$.B(10, '<', J$.F(73, J$.R(57, 'Number', Number, 2), 0)(J$.R(65, 'value', value, 0)), J$.T(81, 0, 22, false), 0), isNegative, 1));
                                            var buffer = J$.X1(129, J$.W(121, 'buffer', J$.M(113, J$.R(105, 'value', value, 0), 'toString', 0)(), buffer, 1));
                                            var size = J$.X1(153, J$.W(145, 'size', J$.T(137, 0, 22, false), size, 1));
                                            if (J$.X1(713, J$.C(16, J$.R(161, 'isNegative', isNegative, 0)))) {
                                                J$.X1(201, buffer = J$.W(193, 'buffer', J$.M(185, J$.R(169, 'buffer', buffer, 0), 'slice', 0)(J$.T(177, 1, 22, false)), buffer, 0));
                                            }
                                            J$.X1(249, size = J$.W(241, 'size', J$.B(26, '+', J$.B(18, '-', J$.R(209, 'digits', digits, 0), J$.G(225, J$.R(217, 'buffer', buffer, 0), 'length', 0), 0), J$.T(233, 1, 22, false), 0), size, 0));
                                            J$.X1(321, buffer = J$.W(313, 'buffer', J$.M(305, J$.M(289, J$.F(273, J$.R(257, 'Array', Array, 2), 1)(J$.R(265, 'size', size, 0)), 'join', 0)(J$.T(281, '0', 21, false)), 'concat', 0)(J$.R(297, 'buffer', buffer, 0)), buffer, 0));
                                            return J$.X1(369, J$.Rt(361, J$.B(34, '+', J$.X1(721, J$.C(24, J$.R(329, 'isNegative', isNegative, 0))) ? J$.T(337, '-', 21, false) : J$.T(345, '', 21, false), J$.R(353, 'buffer', buffer, 0), 0)));
                                        } catch (J$e) {
                                            J$.Ex(729, J$e);
                                        } finally {
                                            if (J$.Fr(737))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(641, 'arguments', arguments, 4);
                            exports = J$.N(649, 'exports', exports, 4);
                            addZero = J$.N(665, 'addZero', J$.T(657, addZero, 12, false, 377), 0);
                            J$.X1(17, J$.T(9, 'use strict', 21, false));
                            if (J$.X1(769, J$.C(56, J$.C(32, J$.B(50, '===', J$.U(42, 'typeof', J$.I(typeof define === 'undefined' ? J$.R(433, 'define', undefined, 2) : J$.R(433, 'define', define, 2))), J$.T(441, 'function', 21, false), 0)) ? J$.G(457, J$.R(449, 'define', define, 2), 'amd', 0) : J$._()))) {
                                J$.X1(529, J$.F(521, J$.R(465, 'define', define, 2), 0)(J$.T(513, function () {
                                    jalangiLabel2:
                                        while (true) {
                                            try {
                                                J$.Fe(497, arguments.callee, this, arguments);
                                                arguments = J$.N(505, 'arguments', arguments, 4);
                                                return J$.X1(489, J$.Rt(481, J$.R(473, 'addZero', addZero, 0)));
                                            } catch (J$e) {
                                                J$.Ex(745, J$e);
                                            } finally {
                                                if (J$.Fr(753))
                                                    continue jalangiLabel2;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 497)));
                            } else if (J$.X1(761, J$.C(48, J$.C(40, J$.B(66, '!==', J$.U(58, 'typeof', J$.I(typeof module === 'undefined' ? J$.R(537, 'module', undefined, 2) : J$.R(537, 'module', module, 2))), J$.T(545, 'undefined', 21, false), 0)) ? J$.G(561, J$.R(553, 'module', module, 2), 'exports', 0) : J$._()))) {
                                J$.X1(593, J$.P(585, J$.R(569, 'module', module, 2), 'exports', J$.R(577, 'addZero', addZero, 0), 0));
                            } else {
                                J$.X1(625, J$.P(617, J$.R(601, 'exports', exports, 0), 'addZero', J$.R(609, 'addZero', addZero, 0), 0));
                            }
                        } catch (J$e) {
                            J$.Ex(777, J$e);
                        } finally {
                            if (J$.Fr(785))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 633), 0)(J$.R(681, 'this', this, 0)));
        } catch (J$e) {
            J$.Ex(793, J$e);
        } finally {
            if (J$.Sr(801)) {
                J$.L();
                continue jalangiLabel4;
            } else {
                J$.L();
                break jalangiLabel4;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
