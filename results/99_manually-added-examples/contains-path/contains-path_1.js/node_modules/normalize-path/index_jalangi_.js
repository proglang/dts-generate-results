J$.iids = {"8":[11,7,11,30],"9":[8,31,8,38],"10":[11,7,11,17],"16":[15,7,15,30],"17":[8,39,8,66],"18":[11,7,11,30],"25":[8,31,8,67],"26":[15,7,15,30],"33":[8,31,8,67],"41":[8,31,8,67],"49":[10,1,10,7],"57":[11,14,11,17],"65":[11,22,11,30],"73":[12,15,12,24],"81":[12,25,12,44],"89":[12,11,12,45],"97":[12,11,12,45],"105":[12,5,12,46],"113":[14,9,14,12],"121":[14,21,14,31],"129":[14,33,14,36],"137":[14,9,14,37],"139":[14,9,14,20],"145":[14,9,14,37],"153":[14,3,14,38],"161":[15,7,15,20],"169":[15,25,15,30],"177":[16,11,16,34],"185":[16,35,16,38],"193":[16,11,16,39],"201":[16,11,16,39],"209":[16,5,16,40],"217":[18,10,18,13],"225":[18,10,18,13],"233":[18,3,18,14],"241":[10,18,19,2],"249":[10,18,19,2],"257":[10,18,19,2],"265":[10,18,19,2],"273":[10,18,19,2],"281":[10,18,19,2],"289":[10,1,19,2],"297":[10,1,19,3],"305":[1,1,20,1],"313":[1,1,20,1],"321":[11,3,13,4],"329":[15,3,17,4],"337":[10,18,19,2],"345":[10,18,19,2],"353":[1,1,20,1],"361":[1,1,20,1],"nBranches":4,"originalCodeFileName":"/tmp/runtimeAnalysis/node_modules/normalize-path/index.js","instrumentedCodeFileName":"/tmp/runtimeAnalysis/node_modules/normalize-path/index_jalangi_.js","code":"/*!\n * normalize-path <https://github.com/jonschlinkert/normalize-path>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar removeTrailingSeparator = require('remove-trailing-separator');\n\nmodule.exports = function normalizePath(str, stripTrailing) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n  str = str.replace(/[\\\\\\/]+/g, '/');\n  if (stripTrailing !== false) {\n    str = removeTrailingSeparator(str);\n  }\n  return str;\n};\n"};
jalangiLabel9:
    while (true) {
        try {
            J$.Se(305, '/tmp/runtimeAnalysis/node_modules/normalize-path/index_jalangi_.js', '/tmp/runtimeAnalysis/node_modules/normalize-path/index.js');
            J$.N(313, 'removeTrailingSeparator', removeTrailingSeparator, 0);
            var removeTrailingSeparator = J$.X1(41, J$.W(33, 'removeTrailingSeparator', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'remove-trailing-separator', 21, false)), removeTrailingSeparator, 3));
            J$.X1(297, J$.P(289, J$.R(49, 'module', module, 2), 'exports', J$.T(281, function normalizePath(str, stripTrailing) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(241, arguments.callee, this, arguments);
                            arguments = J$.N(249, 'arguments', arguments, 4);
                            normalizePath = J$.N(257, 'normalizePath', normalizePath, 0);
                            str = J$.N(265, 'str', str, 4);
                            stripTrailing = J$.N(273, 'stripTrailing', stripTrailing, 4);
                            if (J$.X1(321, J$.C(8, J$.B(18, '!==', J$.U(10, 'typeof', J$.R(57, 'str', str, 0)), J$.T(65, 'string', 21, false), 0)))) {
                                throw J$.X1(105, J$.Th(97, J$.F(89, J$.R(73, 'TypeError', TypeError, 2), 1)(J$.T(81, 'expected a string', 21, false))));
                            }
                            J$.X1(153, str = J$.W(145, 'str', J$.M(137, J$.R(113, 'str', str, 0), 'replace', 0)(J$.T(121, /[\\\/]+/g, 14, false), J$.T(129, '/', 21, false)), str, 0));
                            if (J$.X1(329, J$.C(16, J$.B(26, '!==', J$.R(161, 'stripTrailing', stripTrailing, 0), J$.T(169, false, 23, false), 0)))) {
                                J$.X1(209, str = J$.W(201, 'str', J$.F(193, J$.R(177, 'removeTrailingSeparator', removeTrailingSeparator, 1), 0)(J$.R(185, 'str', str, 0)), str, 0));
                            }
                            return J$.X1(233, J$.Rt(225, J$.R(217, 'str', str, 0)));
                        } catch (J$e) {
                            J$.Ex(337, J$e);
                        } finally {
                            if (J$.Fr(345))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 241), 0));
        } catch (J$e) {
            J$.Ex(353, J$e);
        } finally {
            if (J$.Sr(361)) {
                J$.L();
                continue jalangiLabel9;
            } else {
                J$.L();
                break jalangiLabel9;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
