{"8":[2,7,2,31],"9":[1,1,1,7],"10":[2,7,2,18],"16":[14,18,14,22],"17":[2,14,2,18],"18":[2,7,2,31],"24":[25,18,25,22],"25":[2,23,2,31],"26":[14,26,14,40],"32":[32,15,32,56],"33":[3,15,3,24],"34":[14,25,14,40],"40":[32,15,32,56],"41":[3,25,3,44],"42":[25,26,25,40],"48":[53,11,53,19],"49":[3,11,3,45],"50":[25,25,25,40],"56":[60,11,60,19],"57":[3,11,3,45],"58":[32,23,32,43],"64":[66,11,66,19],"65":[3,5,3,46],"66":[32,23,32,56],"72":[73,11,73,19],"73":[6,13,6,19],"74":[35,37,35,44],"80":[80,11,80,18],"81":[6,20,6,24],"82":[35,46,35,49],"88":[92,13,92,31],"89":[6,13,6,25],"96":[104,15,104,57],"97":[6,13,6,25],"98":[35,46,35,49],"104":[103,26,104,58],"105":[6,13,6,25],"106":[49,16,49,24],"112":[105,15,105,57],"113":[9,15,9,17],"114":[49,16,49,24],"120":[103,26,105,58],"121":[9,15,9,17],"122":[54,18,54,21],"128":[107,13,107,23],"129":[9,15,9,17],"130":[61,18,61,19],"136":[98,11,98,20],"137":[14,18,14,22],"138":[68,15,68,18],"144":[38,13,38,14],"145":[14,27,14,31],"146":[75,15,75,18],"152":[39,10,39,13],"153":[14,27,14,40],"154":[81,18,81,21],"160":[40,10,40,13],"161":[14,43,14,48],"162":[84,16,84,24],"168":[41,10,41,13],"169":[14,18,14,48],"170":[84,16,84,24],"176":[42,10,42,13],"177":[14,18,14,48],"178":[90,26,90,31],"184":[43,10,43,13],"185":[25,18,25,22],"186":[92,17,92,22],"192":[44,10,44,13],"193":[25,27,25,31],"194":[92,13,92,31],"200":[45,10,45,13],"201":[25,27,25,40],"202":[93,9,93,20],"208":[46,10,46,13],"209":[25,43,25,48],"216":[47,10,47,13],"217":[25,18,25,48],"218":[93,9,93,20],"224":[48,10,48,13],"225":[25,18,25,48],"226":[94,9,94,12],"232":[52,10,52,13],"233":[29,17,29,22],"240":[58,10,58,13],"241":[29,17,29,22],"242":[94,9,94,12],"248":[59,10,59,13],"249":[29,17,29,22],"250":[96,26,96,31],"256":[65,10,65,13],"257":[32,15,32,19],"258":[98,11,98,20],"264":[72,10,72,13],"265":[32,31,32,35],"266":[100,18,100,22],"272":[79,10,79,13],"273":[32,31,32,41],"274":[103,26,103,39],"280":[87,10,87,13],"281":[32,48,32,56],"282":[104,15,104,31],"288":[35,37,35,44],"289":[32,59,32,63],"290":[104,35,104,57],"296":[125,7,125,37],"297":[32,59,32,69],"298":[105,15,105,31],"304":[125,7,125,37],"305":[32,72,32,74],"306":[105,35,105,57],"313":[32,15,32,74],"314":[109,20,109,42],"321":[32,15,32,74],"322":[110,11,110,14],"329":[35,16,35,17],"337":[35,25,35,28],"338":[110,11,110,14],"345":[35,25,35,35],"346":[113,20,113,29],"353":[35,16,35,17],"354":[119,16,119,17],"361":[35,16,35,17],"362":[125,7,125,13],"369":[35,25,35,35],"370":[125,18,125,37],"377":[35,25,35,35],"378":[125,17,125,37],"385":[35,37,35,38],"386":[126,13,126,24],"393":[35,41,35,44],"394":[126,13,126,30],"409":[35,46,35,47],"417":[35,46,35,49],"433":[36,9,36,12],"441":[36,13,36,14],"449":[36,9,36,15],"457":[36,9,36,15],"465":[36,5,36,16],"473":[38,13,38,14],"481":[39,10,39,13],"489":[40,10,40,13],"497":[41,10,41,13],"505":[42,10,42,13],"513":[43,10,43,13],"521":[44,10,44,13],"529":[45,10,45,13],"537":[46,10,46,13],"545":[47,10,47,13],"553":[49,16,49,20],"561":[49,23,49,24],"569":[49,7,49,12],"577":[49,7,49,24],"585":[49,7,49,25],"593":[48,10,48,13],"601":[53,11,53,19],"609":[54,18,54,21],"617":[54,9,54,14],"625":[54,9,54,21],"633":[54,9,54,22],"641":[52,10,52,13],"649":[58,10,58,13],"657":[60,11,60,19],"665":[61,18,61,19],"673":[61,9,61,14],"681":[61,9,61,19],"689":[61,9,61,20],"697":[59,10,59,13],"705":[66,11,66,19],"713":[67,19,67,23],"721":[67,19,67,23],"729":[67,9,67,24],"737":[68,15,68,18],"745":[68,6,68,11],"753":[68,6,68,18],"761":[68,6,68,19],"769":[65,10,65,13],"777":[73,11,73,19],"785":[74,19,74,24],"793":[74,19,74,24],"801":[74,9,74,25],"809":[75,15,75,18],"817":[75,6,75,11],"825":[75,6,75,18],"833":[75,6,75,19],"841":[72,10,72,13],"849":[80,11,80,18],"857":[81,18,81,21],"865":[81,9,81,14],"873":[81,9,81,21],"881":[81,9,81,22],"889":[84,16,84,20],"897":[84,23,84,24],"905":[84,7,84,12],"913":[84,7,84,24],"921":[84,7,84,25],"929":[79,10,79,13],"937":[90,22,90,25],"945":[90,26,90,27],"953":[90,30,90,31],"961":[90,22,90,32],"969":[90,22,90,32],"977":[90,22,90,32],"985":[91,23,91,24],"993":[91,23,91,24],"1001":[91,23,91,24],"1009":[92,13,92,16],"1017":[92,17,92,18],"1025":[92,21,92,22],"1033":[92,13,92,23],"1041":[92,28,92,31],"1057":[93,9,93,18],"1065":[93,9,93,20],"1081":[93,9,93,21],"1097":[94,9,94,10],"1105":[94,9,94,12],"1121":[94,9,94,13],"1129":[96,22,96,25],"1137":[96,26,96,27],"1145":[96,30,96,31],"1153":[96,22,96,32],"1161":[96,22,96,32],"1169":[96,22,96,32],"1177":[98,12,98,20],"1185":[100,18,100,22],"1193":[100,9,100,14],"1201":[100,9,100,22],"1209":[100,9,100,23],"1217":[103,26,103,35],"1225":[103,38,103,39],"1233":[104,15,104,23],"1241":[104,28,104,31],"1249":[104,35,104,43],"1257":[104,48,104,57],"1265":[105,15,105,23],"1273":[105,28,105,31],"1281":[105,35,105,43],"1289":[105,48,105,57],"1297":[103,26,105,58],"1305":[103,26,105,58],"1313":[107,13,107,23],"1321":[109,20,109,42],"1329":[109,11,109,16],"1337":[109,11,109,42],"1345":[109,11,109,43],"1361":[110,11,110,12],"1369":[110,11,110,14],"1385":[110,11,110,15],"1393":[113,20,113,29],"1401":[113,11,113,16],"1409":[113,11,113,29],"1417":[113,11,113,30],"1425":[87,10,87,13],"1433":[119,16,119,17],"1441":[119,7,119,12],"1449":[119,7,119,17],"1457":[119,7,119,18],"1465":[125,8,125,13],"1473":[125,19,125,24],"1481":[125,33,125,36],"1489":[125,19,125,37],"1491":[125,19,125,32],"1497":[126,13,126,16],"1505":[126,19,126,24],"1513":[126,27,126,30],"1521":[126,13,126,30],"1529":[126,5,126,31],"1537":[129,14,129,20],"1545":[129,21,129,26],"1553":[129,28,129,33],"1561":[129,10,129,34],"1569":[129,10,129,34],"1577":[129,3,129,35],"1585":[1,18,130,2],"1593":[1,18,130,2],"1601":[1,18,130,2],"1609":[1,18,130,2],"1617":[1,18,130,2],"1625":[1,18,130,2],"1633":[1,18,130,2],"1641":[1,18,130,2],"1649":[1,18,130,2],"1657":[1,18,130,2],"1665":[1,18,130,2],"1673":[1,18,130,2],"1681":[1,18,130,2],"1689":[1,18,130,2],"1697":[1,18,130,2],"1705":[1,18,130,2],"1713":[1,18,130,2],"1721":[1,18,130,2],"1729":[1,1,130,2],"1737":[1,1,130,3],"1745":[1,1,131,1],"1753":[2,3,4,4],"1761":[14,18,14,48],"1769":[25,18,25,48],"1777":[32,15,32,74],"1785":[53,7,56,8],"1793":[60,7,63,8],"1801":[66,7,70,8],"1809":[73,7,77,8],"1817":[80,7,83,8],"1825":[92,7,95,8],"1833":[107,9,114,10],"1841":[98,7,115,8],"1849":[38,13,38,14],"1857":[39,10,39,13],"1865":[40,10,40,13],"1873":[41,10,41,13],"1881":[42,10,42,13],"1889":[43,10,43,13],"1897":[44,10,44,13],"1905":[45,10,45,13],"1913":[46,10,46,13],"1921":[47,10,47,13],"1929":[48,10,48,13],"1937":[52,10,52,13],"1945":[58,10,58,13],"1953":[59,10,59,13],"1961":[65,10,65,13],"1969":[72,10,72,13],"1977":[79,10,79,13],"1985":[87,10,87,13],"1993":[35,3,121,4],"2001":[35,3,121,4],"2009":[125,3,127,4],"2017":[1,18,130,2],"2025":[1,18,130,2],"2033":[1,1,131,1],"2041":[1,1,131,1],"nBranches":76,"originalCodeFileName":"/tmp/runtimeAnalysis/node_modules/glob-to-regexp/index.js","instrumentedCodeFileName":"/tmp/runtimeAnalysis/node_modules/glob-to-regexp/index_jalangi_.js","code":"module.exports = function (glob, opts) {\n  if (typeof glob !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  var str = String(glob);\n\n  // The regexp we are building, as a string.\n  var reStr = \"\";\n\n  // Whether we are matching so called \"extended\" globs (like bash) and should\n  // support single character matching, matching ranges of characters, group\n  // matching, etc.\n  var extended = opts ? !!opts.extended : false;\n\n  // When globstar is _false_ (default), '/foo/*' is translated a regexp like\n  // '^\\/foo\\/.*$' which will match any string beginning with '/foo/'\n  // When globstar is _true_, '/foo/*' is translated to regexp like\n  // '^\\/foo\\/[^/]*$' which will match any string beginning with '/foo/' BUT\n  // which does not have a '/' to the right of it.\n  // E.g. with '/foo/*' these will match: '/foo/bar', '/foo/bar.txt' but\n  // these will not '/foo/bar/baz', '/foo/bar/baz.txt'\n  // Lastely, when globstar is _true_, '/foo/**' is equivelant to '/foo/*' when\n  // globstar is _false_\n  var globstar = opts ? !!opts.globstar : false;\n\n  // If we are doing extended matching, this boolean is true when we are inside\n  // a group (eg {*.html,*.js}), and false otherwise.\n  var inGroup = false;\n\n  // RegExp flags (eg \"i\" ) to pass in to RegExp constructor.\n  var flags = opts && typeof( opts.flags ) === \"string\" ? opts.flags : \"\";\n\n  var c;\n  for (var i = 0, len = str.length; i < len; i++) {\n    c = str[i];\n\n    switch (c) {\n    case \"/\":\n    case \"$\":\n    case \"^\":\n    case \"+\":\n    case \".\":\n    case \"(\":\n    case \")\":\n    case \"=\":\n    case \"!\":\n    case \"|\":\n      reStr += \"\\\\\" + c;\n      break;\n\n    case \"?\":\n      if (extended) {\n        reStr += \".\";\n\t    break;\n      }\n\n    case \"[\":\n    case \"]\":\n      if (extended) {\n        reStr += c;\n\t    break;\n      }\n\n    case \"{\":\n      if (extended) {\n        inGroup = true;\n\t    reStr += \"(\";\n\t    break;\n      }\n\n    case \"}\":\n      if (extended) {\n        inGroup = false;\n\t    reStr += \")\";\n\t    break;\n      }\n\n    case \",\":\n      if (inGroup) {\n        reStr += \"|\";\n\t    break;\n      }\n      reStr += \"\\\\\" + c;\n      break;\n\n    case \"*\":\n      // Move over all consecutive \"*\"'s.\n      // Also store the previous and next characters\n      var prevChar = str[i - 1];\n      var starCount = 1;\n      while(str[i + 1] === \"*\") {\n        starCount++;\n        i++;\n      }\n      var nextChar = str[i + 1];\n\n      if (!globstar) {\n        // globstar is disabled, so treat any number of \"*\" as one\n        reStr += \".*\";\n      } else {\n        // globstar is enabled, so determine if this is a globstar segment\n        var isGlobstar = starCount > 1                      // multiple \"*\"'s\n          && (prevChar === \"/\" || prevChar === undefined)   // from the start of the segment\n          && (nextChar === \"/\" || nextChar === undefined)   // to the end of the segment\n\n        if (isGlobstar) {\n          // it's a globstar, so match zero or more path segments\n          reStr += \"((?:[^/]*(?:\\/|$))*)\";\n          i++; // move over the \"/\"\n        } else {\n          // it's not a globstar, so only match one path segment\n          reStr += \"([^/]*)\";\n        }\n      }\n      break;\n\n    default:\n      reStr += c;\n    }\n  }\n\n  // When regexp 'g' flag is specified don't\n  // constrain the regular expression with ^ & $\n  if (!flags || !~flags.indexOf('g')) {\n    reStr = \"^\" + reStr + \"$\";\n  }\n\n  return new RegExp(reStr, flags);\n};\n"}