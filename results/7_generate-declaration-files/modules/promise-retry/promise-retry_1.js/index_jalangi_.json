{"8":[22,13,22,37],"9":[1,20,1,27],"10":[22,13,22,37],"17":[1,28,1,43],"25":[1,20,1,44],"33":[1,20,1,44],"41":[1,20,1,44],"49":[4,1,4,13],"57":[5,5,5,12],"65":[5,17,5,33],"73":[5,35,5,41],"81":[5,5,5,42],"83":[5,5,5,16],"89":[5,5,5,43],"97":[7,12,7,23],"105":[7,12,7,25],"113":[8,12,8,17],"121":[7,12,8,18],"123":[7,12,8,11],"129":[7,12,8,18],"137":[7,5,8,19],"145":[4,14,9,2],"153":[4,14,9,2],"161":[4,14,9,2],"169":[4,14,9,2],"177":[4,14,9,2],"185":[4,1,9,3],"193":[10,7,12,2],"201":[10,7,12,2],"209":[10,7,12,2],"217":[10,7,12,2],"225":[12,4,14,2],"233":[12,4,14,2],"241":[12,4,14,2],"249":[12,4,14,2],"257":[4,1,14,3],"259":[4,1,10,6],"265":[4,1,14,4],"273":[17,1,17,13],"281":[18,5,18,12],"289":[18,17,18,33],"297":[18,35,18,41],"305":[18,5,18,42],"307":[18,5,18,16],"313":[18,5,18,43],"321":[20,12,20,23],"329":[20,12,20,25],"337":[22,13,22,16],"345":[22,13,22,21],"353":[22,26,22,37],"361":[23,13,23,18],"369":[23,19,23,22],"377":[23,13,23,23],"385":[23,13,23,24],"393":[26,15,26,18],"401":[26,15,26,18],"409":[26,9,26,19],"417":[21,12,27,6],"425":[21,12,27,6],"433":[21,12,27,6],"441":[21,12,27,6],"449":[20,12,27,7],"451":[20,12,21,11],"457":[20,12,27,7],"465":[20,5,27,8],"473":[17,14,28,2],"481":[17,14,28,2],"489":[17,14,28,2],"497":[17,14,28,2],"505":[17,14,28,2],"513":[17,1,28,3],"521":[29,7,31,2],"529":[29,7,31,2],"537":[29,7,31,2],"545":[29,7,31,2],"553":[31,4,33,2],"561":[31,4,33,2],"569":[31,4,33,2],"577":[31,4,33,2],"585":[17,1,33,3],"587":[17,1,29,6],"593":[17,1,33,4],"601":[1,1,34,1],"609":[1,1,34,1],"617":[4,14,9,2],"625":[4,14,9,2],"633":[10,7,12,2],"641":[10,7,12,2],"649":[12,4,14,2],"657":[12,4,14,2],"665":[22,9,24,10],"673":[21,12,27,6],"681":[21,12,27,6],"689":[17,14,28,2],"697":[17,14,28,2],"705":[29,7,31,2],"713":[29,7,31,2],"721":[31,4,33,2],"729":[31,4,33,2],"737":[1,1,34,1],"745":[1,1,34,1],"nBranches":2,"originalCodeFileName":"/tmp/runtimeAnalysis/index.js","instrumentedCodeFileName":"/tmp/runtimeAnalysis/index_jalangi_.js","code":"var promiseRetry = require('promise-retry');\n\n// Simple example\npromiseRetry(function (retry, number) {\n    console.log('attempt number', number);\n\n    return doSomething()\n    .catch(retry);\n})\n.then(function (value) {\n    // ..\n}, function (err) {\n    // ..\n});\n\n// Conditional example\npromiseRetry(function (retry, number) {\n    console.log('attempt number', number);\n\n    return doSomething()\n    .catch(function (err) {\n        if (err.code === 'ETIMEDOUT') {\n            retry(err);\n        }\n\n        throw err;\n    });\n})\n.then(function (value) {\n    // ..\n}, function (err) {\n    // ..\n});\n"}