{"9":[1,14,1,21],"17":[1,22,1,38],"25":[1,14,1,39],"33":[1,14,1,39],"41":[1,14,1,39],"49":[2,15,2,22],"57":[2,23,2,32],"65":[2,15,2,33],"73":[2,15,2,33],"81":[2,15,2,33],"89":[3,11,3,18],"97":[3,19,3,24],"105":[3,11,3,25],"113":[3,11,3,25],"121":[3,11,3,25],"129":[6,17,6,23],"137":[9,10,9,13],"145":[9,10,9,21],"153":[9,28,9,32],"161":[9,34,9,43],"169":[9,10,9,44],"171":[9,10,9,27],"177":[9,10,9,44],"185":[9,3,9,45],"193":[6,24,10,2],"201":[6,24,10,2],"209":[6,24,10,2],"217":[6,17,10,3],"225":[6,17,10,3],"233":[6,17,10,3],"241":[14,29,14,33],"249":[14,29,14,33],"257":[14,22,14,34],"265":[14,9,14,36],"273":[14,9,14,36],"281":[14,9,14,36],"289":[15,10,15,24],"297":[15,10,15,24],"305":[15,10,15,24],"313":[13,18,16,2],"321":[13,18,16,2],"329":[13,18,16,2],"337":[18,10,18,19],"345":[19,17,19,24],"353":[19,33,19,43],"361":[19,13,19,44],"363":[19,17,19,32],"369":[20,14,20,22],"377":[21,14,21,19],"385":[18,20,22,2],"393":[22,4,24,2],"401":[22,4,24,2],"409":[22,4,24,2],"417":[22,4,24,2],"425":[18,10,24,3],"433":[18,10,24,3],"441":[18,10,24,3],"449":[1,1,25,1],"457":[1,1,25,1],"465":[1,1,25,1],"473":[1,1,25,1],"481":[1,1,25,1],"489":[1,1,25,1],"497":[1,1,25,1],"505":[6,24,10,2],"513":[6,24,10,2],"521":[14,9,14,36],"529":[14,9,14,36],"537":[15,10,15,24],"545":[15,10,15,24],"553":[22,4,24,2],"561":[22,4,24,2],"569":[1,1,25,1],"577":[1,1,25,1],"nBranches":0,"originalCodeFileName":"/tmp/runtimeAnalysis/index.js","instrumentedCodeFileName":"/tmp/runtimeAnalysis/index_jalangi_.js","code":"var inject = require('reconnect-core');\nvar backoff = require('backoff');\nvar net = require('net');\n\n// build you own reconnect module\nvar reconnect = inject(function () {\n  // arguments are what you passed to .connect\n  // this is the reconnect instance\n  return net.connect.apply(null, arguments);\n});\n\n// Reconnect every 10 seconds\nvar myStrategy = {\n  next: function() { return 10e3; },\n  reset: function() { }\n}\n\nvar re = reconnect({\n  strategy: new backoff.Backoff(myStrategy),\n  failAfter: Infinity,\n  immediate: false\n}, function (stream) {\n  // stream = the stream you should consume\n})\n"}