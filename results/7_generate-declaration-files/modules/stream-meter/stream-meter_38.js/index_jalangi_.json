{"9":[1,13,1,20],"17":[1,21,1,35],"25":[1,13,1,36],"33":[1,13,1,36],"41":[1,13,1,36],"49":[3,14,3,19],"57":[3,20,3,24],"65":[3,14,3,25],"73":[3,14,3,25],"81":[3,14,3,25],"89":[4,1,4,7],"97":[4,11,4,18],"105":[4,20,6,2],"113":[4,20,6,2],"121":[4,20,6,2],"129":[4,20,6,2],"137":[4,1,6,3],"139":[4,1,4,10],"145":[4,1,6,3],"153":[9,12,9,18],"161":[9,12,9,24],"169":[9,12,9,24],"177":[9,12,9,24],"185":[1,1,10,1],"193":[1,1,10,1],"201":[1,1,10,1],"209":[1,1,10,1],"217":[4,20,6,2],"225":[4,20,6,2],"233":[1,1,10,1],"241":[1,1,10,1],"nBranches":0,"originalCodeFileName":"/tmp/runtimeAnalysis/index.js","instrumentedCodeFileName":"/tmp/runtimeAnalysis/index_jalangi_.js","code":"var meter = require(\"stream-meter\")\n\nvar stream = meter(size)\nstream.on(\"error\", function (e) {\n  // handle the meter aborting the stream\n})\n\n// read the bytes processed by the meter and passed through to any subsequent streams.\nvar size = stream.bytes\n"}