J$.iids = {"8":[12,9,12,27],"9":[1,11,1,17],"10":[11,7,11,28],"16":[11,7,11,28],"17":[1,28,1,37],"18":[12,9,12,27],"24":[19,7,19,15],"25":[1,11,1,37],"26":[13,12,13,74],"32":[20,7,20,15],"33":[1,11,1,37],"34":[13,12,13,80],"40":[21,11,21,32],"41":[1,1,1,37],"42":[17,9,17,25],"48":[17,9,17,25],"49":[2,1,2,8],"50":[19,7,19,15],"56":[25,12,25,28],"57":[2,24,2,34],"58":[19,31,19,42],"65":[2,1,2,34],"66":[20,7,20,15],"73":[2,1,2,34],"74":[21,11,21,32],"81":[5,10,5,14],"82":[25,12,25,28],"89":[5,25,5,28],"97":[5,30,5,40],"105":[5,41,5,49],"113":[5,51,5,64],"121":[5,30,5,65],"129":[5,67,5,73],"137":[5,10,5,74],"139":[5,10,5,24],"145":[5,10,5,74],"153":[5,3,5,74],"161":[4,1,6,2],"169":[4,1,6,2],"177":[4,1,6,2],"185":[4,1,6,2],"193":[4,1,6,2],"201":[4,1,6,2],"209":[9,15,9,17],"217":[9,26,9,28],"225":[9,15,9,17],"233":[9,15,9,17],"241":[9,26,9,28],"249":[9,26,9,28],"257":[11,7,11,20],"265":[11,24,11,28],"273":[12,9,12,14],"281":[12,15,12,16],"289":[12,9,12,17],"297":[12,22,12,27],"305":[12,36,12,50],"313":[12,36,12,50],"321":[12,29,12,50],"329":[13,12,13,26],"337":[13,29,13,33],"345":[13,40,13,41],"353":[13,43,13,48],"361":[13,57,13,62],"369":[13,43,13,63],"371":[13,43,13,56],"377":[13,29,13,64],"379":[13,29,13,39],"385":[13,70,13,73],"393":[13,29,13,74],"395":[13,29,13,69],"401":[13,77,13,80],"409":[13,12,13,80],"417":[13,5,13,80],"425":[11,46,14,4],"433":[11,46,14,4],"441":[11,46,14,4],"449":[11,46,14,4],"457":[11,46,14,4],"465":[11,46,14,4],"473":[11,30,14,4],"481":[17,9,17,14],"489":[17,9,17,21],"497":[17,24,17,25],"505":[18,21,18,26],"513":[18,35,18,39],"521":[18,21,18,40],"523":[18,21,18,34],"529":[18,21,18,40],"537":[18,21,18,40],"545":[19,8,19,15],"553":[19,18,19,23],"561":[19,31,19,38],"569":[19,41,19,42],"577":[19,18,19,43],"579":[19,18,19,30],"585":[19,46,19,51],"593":[19,57,19,61],"601":[19,46,19,62],"603":[19,46,19,56],"609":[19,7,19,62],"617":[20,8,20,15],"625":[20,18,20,22],"633":[20,30,20,37],"641":[20,39,20,47],"649":[20,49,20,52],"657":[20,18,20,53],"659":[20,18,20,29],"665":[20,56,20,60],"673":[20,66,20,69],"681":[20,56,20,70],"683":[20,56,20,65],"689":[20,7,20,70],"697":[21,12,21,17],"705":[21,26,21,31],"713":[21,12,21,32],"715":[21,12,21,25],"721":[21,42,21,55],"729":[21,61,21,65],"737":[21,67,21,70],"745":[21,72,21,77],"753":[21,42,21,78],"755":[21,42,21,60],"761":[21,42,21,78],"769":[21,34,21,78],"777":[23,10,23,15],"785":[23,21,23,26],"793":[23,10,23,27],"795":[23,10,23,20],"801":[23,10,23,27],"809":[25,12,25,20],"817":[25,24,25,28],"825":[25,31,25,36],"833":[25,39,25,47],"841":[25,53,25,57],"849":[25,59,25,62],"857":[25,64,25,69],"865":[25,39,25,70],"867":[25,39,25,52],"873":[25,12,25,70],"881":[25,5,25,70],"889":[16,10,26,4],"897":[16,10,26,4],"905":[16,10,26,4],"913":[16,10,26,4],"921":[16,10,26,4],"929":[16,10,26,4],"937":[16,10,26,4],"945":[16,3,26,4],"953":[8,1,27,2],"961":[8,1,27,2],"969":[8,1,27,2],"977":[8,1,27,2],"985":[8,1,27,2],"993":[8,1,27,2],"1001":[1,1,28,1],"1009":[4,1,6,2],"1017":[1,1,28,1],"1025":[8,1,27,2],"1033":[1,1,28,1],"1041":[4,1,6,2],"1049":[4,1,6,2],"1057":[12,5,12,50],"1065":[11,46,14,4],"1073":[11,46,14,4],"1081":[11,3,14,4],"1089":[19,7,19,62],"1097":[20,7,20,70],"1105":[21,7,21,78],"1113":[17,5,23,27],"1121":[25,12,25,70],"1129":[16,10,26,4],"1137":[16,10,26,4],"1145":[8,1,27,2],"1153":[8,1,27,2],"1161":[1,1,28,1],"1169":[1,1,28,1],"nBranches":14,"originalCodeFileName":"/tmp/runtimeAnalysis/node_modules/json-stringify-safe/stringify.js","instrumentedCodeFileName":"/tmp/runtimeAnalysis/node_modules/json-stringify-safe/stringify_jalangi_.js","code":"exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n"};
jalangiLabel5:
    while (true) {
        try {
            J$.Se(1001, '/tmp/runtimeAnalysis/node_modules/json-stringify-safe/stringify_jalangi_.js', '/tmp/runtimeAnalysis/node_modules/json-stringify-safe/stringify.js');
            function stringify(obj, replacer, spaces, cycleReplacer) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(161, arguments.callee, this, arguments);
                            arguments = J$.N(169, 'arguments', arguments, 4);
                            obj = J$.N(177, 'obj', obj, 4);
                            replacer = J$.N(185, 'replacer', replacer, 4);
                            spaces = J$.N(193, 'spaces', spaces, 4);
                            cycleReplacer = J$.N(201, 'cycleReplacer', cycleReplacer, 4);
                            return J$.X1(153, J$.Rt(145, J$.M(137, J$.R(81, 'JSON', JSON, 2), 'stringify', 0)(J$.R(89, 'obj', obj, 0), J$.F(121, J$.R(97, 'serializer', serializer, 1), 0)(J$.R(105, 'replacer', replacer, 0), J$.R(113, 'cycleReplacer', cycleReplacer, 0)), J$.R(129, 'spaces', spaces, 0))));
                        } catch (J$e) {
                            J$.Ex(1041, J$e);
                        } finally {
                            if (J$.Fr(1049))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function serializer(replacer, cycleReplacer) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(953, arguments.callee, this, arguments);
                            arguments = J$.N(961, 'arguments', arguments, 4);
                            replacer = J$.N(969, 'replacer', replacer, 4);
                            cycleReplacer = J$.N(977, 'cycleReplacer', cycleReplacer, 4);
                            J$.N(985, 'stack', stack, 0);
                            J$.N(993, 'keys', keys, 0);
                            var stack = J$.X1(233, J$.W(225, 'stack', J$.T(209, [], 10, false), stack, 1)), keys = J$.X1(249, J$.W(241, 'keys', J$.T(217, [], 10, false), keys, 1));
                            if (J$.X1(1081, J$.C(16, J$.B(10, '==', J$.R(257, 'cycleReplacer', cycleReplacer, 0), J$.T(265, null, 25, false), 0))))
                                J$.X1(473, cycleReplacer = J$.W(465, 'cycleReplacer', J$.T(457, function (key, value) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(425, arguments.callee, this, arguments);
                                            arguments = J$.N(433, 'arguments', arguments, 4);
                                            key = J$.N(441, 'key', key, 4);
                                            value = J$.N(449, 'value', value, 4);
                                            if (J$.X1(1057, J$.C(8, J$.B(18, '===', J$.G(289, J$.R(273, 'stack', stack, 0), J$.T(281, 0, 22, false), 4), J$.R(297, 'value', value, 0), 0))))
                                                return J$.X1(321, J$.Rt(313, J$.T(305, "[Circular ~]", 21, false)));
                                            return J$.X1(417, J$.Rt(409, J$.B(34, '+', J$.B(26, '+', J$.T(329, "[Circular ~.", 21, false), J$.M(393, J$.M(377, J$.R(337, 'keys', keys, 0), 'slice', 0)(J$.T(345, 0, 22, false), J$.M(369, J$.R(353, 'stack', stack, 0), 'indexOf', 0)(J$.R(361, 'value', value, 0))), 'join', 0)(J$.T(385, ".", 21, false)), 0), J$.T(401, "]", 21, false), 0)));
                                        } catch (J$e) {
                                            J$.Ex(1065, J$e);
                                        } finally {
                                            if (J$.Fr(1073))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 425), cycleReplacer, 0));
                            return J$.X1(945, J$.Rt(937, J$.T(929, function (key, value) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(889, arguments.callee, this, arguments);
                                            arguments = J$.N(897, 'arguments', arguments, 4);
                                            key = J$.N(905, 'key', key, 4);
                                            value = J$.N(913, 'value', value, 4);
                                            J$.N(921, 'thisPos', thisPos, 0);
                                            if (J$.X1(1113, J$.C(48, J$.B(42, '>', J$.G(489, J$.R(481, 'stack', stack, 0), 'length', 0), J$.T(497, 0, 22, false), 0)))) {
                                                var thisPos = J$.X1(537, J$.W(529, 'thisPos', J$.M(521, J$.R(505, 'stack', stack, 0), 'indexOf', 0)(J$.R(513, 'this', this, 0)), thisPos, 1));
                                                J$.X1(609, J$.X1(1089, J$.C(24, J$.U(50, '~', J$.R(545, 'thisPos', thisPos, 0)))) ? J$.M(577, J$.R(553, 'stack', stack, 0), 'splice', 0)(J$.B(58, '+', J$.R(561, 'thisPos', thisPos, 0), J$.T(569, 1, 22, false), 0)) : J$.M(601, J$.R(585, 'stack', stack, 0), 'push', 0)(J$.R(593, 'this', this, 0)));
                                                J$.X1(689, J$.X1(1097, J$.C(32, J$.U(66, '~', J$.R(617, 'thisPos', thisPos, 0)))) ? J$.M(657, J$.R(625, 'keys', keys, 0), 'splice', 0)(J$.R(633, 'thisPos', thisPos, 0), J$.T(641, Infinity, 22, false), J$.R(649, 'key', key, 0)) : J$.M(681, J$.R(665, 'keys', keys, 0), 'push', 0)(J$.R(673, 'key', key, 0)));
                                                if (J$.X1(1105, J$.C(40, J$.U(74, '~', J$.M(713, J$.R(697, 'stack', stack, 0), 'indexOf', 0)(J$.R(705, 'value', value, 0))))))
                                                    J$.X1(769, value = J$.W(761, 'value', J$.M(753, J$.R(721, 'cycleReplacer', cycleReplacer, 0), 'call', 0)(J$.R(729, 'this', this, 0), J$.R(737, 'key', key, 0), J$.R(745, 'value', value, 0)), value, 0));
                                            } else
                                                J$.X1(801, J$.M(793, J$.R(777, 'stack', stack, 0), 'push', 0)(J$.R(785, 'value', value, 0)));
                                            return J$.X1(881, J$.Rt(873, J$.X1(1121, J$.C(56, J$.B(82, '==', J$.R(809, 'replacer', replacer, 0), J$.T(817, null, 25, false), 0))) ? J$.R(825, 'value', value, 0) : J$.M(865, J$.R(833, 'replacer', replacer, 0), 'call', 0)(J$.R(841, 'this', this, 0), J$.R(849, 'key', key, 0), J$.R(857, 'value', value, 0))));
                                        } catch (J$e) {
                                            J$.Ex(1129, J$e);
                                        } finally {
                                            if (J$.Fr(1137))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 889)));
                        } catch (J$e) {
                            J$.Ex(1145, J$e);
                        } finally {
                            if (J$.Fr(1153))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            stringify = J$.N(1017, 'stringify', J$.T(1009, stringify, 12, false, 161), 0);
            serializer = J$.N(1033, 'serializer', J$.T(1025, serializer, 12, false, 953), 0);
            J$.X1(41, exports = J$.W(33, 'exports', J$.P(25, J$.R(9, 'module', module, 2), 'exports', J$.R(17, 'stringify', stringify, 1), 0), J$.I(typeof exports === 'undefined' ? undefined : exports), 4));
            J$.X1(73, J$.P(65, J$.R(49, 'exports', exports, 2), 'getSerialize', J$.R(57, 'serializer', serializer, 1), 0));
        } catch (J$e) {
            J$.Ex(1161, J$e);
        } finally {
            if (J$.Sr(1169)) {
                J$.L();
                continue jalangiLabel5;
            } else {
                J$.L();
                break jalangiLabel5;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
